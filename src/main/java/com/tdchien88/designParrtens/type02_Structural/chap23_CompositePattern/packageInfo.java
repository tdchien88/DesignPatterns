package com.tdchien88.designParrtens.type02_Structural.chap23_CompositePattern;

// https://www.javatpoint.com/composite-pattern
/**
 * A Composite Pattern says that just "allow clients to operate in generic
 * manner on objects that may or may not represent a hierarchy of objects".
 * 
 * Advantage of Composite Design Pattern
 * 
 * It defines class hierarchies that contain primitive and complex objects.
 * 
 * It makes easier to you to add new kinds of components.
 * 
 * It provides flexibility of structure with manageable class or interface.
 * 
 * Usage of Composite Pattern
 * 
 * It is used:
 * 
 * _ When you want to represent a full or partial hierarchy of objects.
 * 
 * _ When the responsibilities are needed to be added dynamically to the
 * individual objects without affecting other objects. Where the responsibility
 * of object may vary from time to time.
 * 
 */
public class packageInfo {

}
